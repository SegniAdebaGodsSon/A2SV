/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> queue = new ArrayDeque<>();
        List<List<Integer>> result = new ArrayList<>();
        if(root == null) return result;
        queue.offer(root);
        int flip = 0;
        while(queue.size()>0){
            int size = queue.size();
            LinkedList<Integer> level = new LinkedList<>();
            for(int i=0; i<size; i++){
                TreeNode popped = queue.poll();
                if(popped.left != null) queue.offer(popped.left);
                if(popped.right != null) queue.offer(popped.right);
                if(flip == 0){
                    level.add(popped.val);
                }else{
                    level.addFirst(popped.val);
                }
            }
            result.add(level);

            flip = 1 - flip;
        }

        return result;

    }
}